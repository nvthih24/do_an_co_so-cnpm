import React, { useRef, useState } from "react";
import { useParams } from "react-router-dom";
import jsPDF from "jspdf";
import html2canvas from "html2canvas";
import cvTemplates from "./CvTemplate";
import "../../styles/editcvpage.css";
import "../../styles/cvtemplate-preview.css";

const EditCVPage = () => {
  const { id } = useParams();
  const template = cvTemplates.find((t) => t.id === id);
  const [fields, setFields] = useState(template ? { ...template.fields } : {});
  const previewRef = useRef();

  if (!template) return <p>Kh√¥ng t√¨m th·∫•y template</p>;

  // Handlers chung
  const handleChange = (e) => setFields((f) => ({ ...f, [e.target.name]: e.target.value }));
  const handleAvatarChange = (e) => {
    const file = e.target.files[0];
    if (!file) return;
    const reader = new FileReader();
    reader.onload = (ev) => setFields((f) => ({ ...f, avatar: ev.target.result }));
    reader.readAsDataURL(file);
  };
  const handleDownloadPDF = async () => {
    if (!previewRef.current) return;
    const canvas = await html2canvas(previewRef.current, { scale: 2 });
    const pdf = new jsPDF({
      orientation: "portrait",
      unit: "px",
      format: [canvas.width, canvas.height],
    });
    pdf.addImage(canvas.toDataURL("image/png"), "PNG", 0, 0);
    pdf.save(`${fields.fullName || "cv"}.pdf`);
  };

  // helper d·ª±ng field
  const Field = (label, name, opts = {}) => (
    <label className={opts.full ? "full" : ""}>
      <span>{label}</span>
      {opts.textarea ? (
        <textarea
          name={name}
          value={fields[name] || ""}
          onChange={handleChange}
        />
      ) : (
        <input
          type={opts.type || "text"}
          name={name}
          value={fields[name] || ""}
          onChange={handleChange}
        />
      )}
    </label>
  );

  const isHaveAvatar = id === "pro" || id === "ambition";

  // form b√™n tr√°i
  const renderForm = () => (
    <>
      {isHaveAvatar && (
        <label className="full">
          <span>·∫¢nh ƒë·∫°i di·ªán:</span>
          <input type="file" accept="image/*" onChange={handleAvatarChange} />
        </label>
      )}
      {Field("H·ªç t√™n:", "fullName")}
      {id === "pro" && Field("Ng√†y sinh:", "dob")}
      {id === "pro" && Field("Gi·ªõi t√≠nh:", "gender")}
      {(id === "ambition" || id === "expert") && Field("V·ªã tr√≠:", "position")}
      {Field("S·ªë ƒëi·ªán tho·∫°i:", "phone")}
      {Field("Email:", "email")}
      {Field("Website:", "website")}
      {Field("ƒê·ªãa ch·ªâ:", "address")}
      {Field("K·ªπ nƒÉng:", "skills", { textarea: true, full: true })}
      {Field("S·ªü th√≠ch:", "hobbies", { textarea: true, full: true })}
      {Field("Ng∆∞·ªùi gi·ªõi thi·ªáu:", "reference", { textarea: true, full: true })}
      {Field("Th√¥ng tin th√™m:", "additional", { textarea: true, full: true })}
      {Field("M·ª•c ti√™u ngh·ªÅ nghi·ªáp:", "objective", { textarea: true, full: true })}
      {Field("Kinh nghi·ªám:", "experience", { textarea: true, full: true })}
      {Field("H·ªçc v·∫•n:", "education", { textarea: true, full: true })}
      {Field("Gi·∫£i th∆∞·ªüng:", "award", { textarea: true, full: true })}
      {Field("Ch·ª©ng ch·ªâ:", "certificate", { textarea: true, full: true })}
      {Field("Ho·∫°t ƒë·ªông:", "activity", { textarea: true, full: true })}
    </>
  );

  // helper Avatar
  const Avatar = ({ cls }) =>
    isHaveAvatar ? (
      <div
        className={cls}
        style={{
          backgroundImage: `url(${fields.avatar || "/avatar-default.png"})`,
        }}
      />
    ) : null;

  // 3 preview
  const Pro = () => (
    <div ref={previewRef} className="cv-preview-pro editcv-preview">
      <div className="cvpro-left">
        <Avatar cls="avatar" />
        <div className="info-block">
          <div><b>Ng√†y sinh:</b> {fields.dob}</div>
          <div><b>Gi·ªõi t√≠nh:</b> {fields.gender}</div>
          <div><b>SƒêT:</b> {fields.phone}</div>
          <div><b>Email:</b> {fields.email}</div>
          <div><b>ƒê·ªãa ch·ªâ:</b> {fields.address}</div>
          <div><b>Website:</b> {fields.website}</div>
        </div>
        <div className="objective-block"><b>M·ª•c ti√™u ngh·ªÅ nghi·ªáp</b><br />{fields.objective}</div>
        <div className="skills-block"><b>K·ªπ nƒÉng</b><br />{fields.skills}</div>
        <div className="hobbies-block"><b>S·ªü th√≠ch</b><br />{fields.hobbies}</div>
      </div>
      <div className="cvpro-right">
        <h2>{fields.fullName}</h2>
        <div className="section"><b>Kinh nghi·ªám l√†m vi·ªác</b><br />{fields.experience}</div>
        <div className="section"><b>H·ªçc v·∫•n</b><br />{fields.education}</div>
        <div className="section"><b>Ho·∫°t ƒë·ªông</b><br />{fields.activity}</div>
        <div className="section"><b>Danh hi·ªáu &amp; Gi·∫£i th∆∞·ªüng</b><br />{fields.award}</div>
        <div className="section"><b>Ch·ª©ng ch·ªâ</b><br />{fields.certificate}</div>
        <div className="section"><b>Th√¥ng tin th√™m</b><br />{fields.additional}</div>
        <div className="section"><b>Ng∆∞·ªùi gi·ªõi thi·ªáu</b><br />{fields.reference}</div>
      </div>
    </div>
  );

  const Ambition = () => (
    <div ref={previewRef} className="cv-preview-ambition editcv-preview">
      <div className="ambition-left">
        <Avatar cls="avatar" />
        <div className="ambition-name">{fields.fullName || "T√™n"}</div>
        <div className="ambition-position">{fields.position || "V·ªã tr√≠ ·ª©ng tuy·ªÉn"}</div>
        <div className="ambition-contact-block">
          <div className="contact-item"><span className="icon">üì±</span>{fields.phone}</div>
          <div className="contact-item"><span className="icon">‚úâÔ∏è</span>{fields.email}</div>
          <div className="contact-item"><span className="icon">üåê</span>{fields.website}</div>
          <div className="contact-item"><span className="icon">üìç</span>{fields.address}</div>
        </div>
        <div className="ambition-section"><b>C√ÅC K·ª∏ NƒÇNG</b><div>{fields.skills}</div></div>
        <div className="ambition-section"><b>S·ªû TH√çCH</b><div>{fields.hobbies}</div></div>
        <div className="ambition-section"><b>NG∆Ø·ªúI GI·ªöI THI·ªÜU</b><div>{fields.reference}</div></div>
        <div className="ambition-section"><b>TH√îNG TIN TH√äM</b><div>{fields.additional}</div></div>
      </div>
      <div className="ambition-right">
        <div className="ambition-objective">
          <div className="ambition-title">M·ª§C TI√äU NGH·ªÄ NGHI·ªÜP</div>
          <div>{fields.objective}</div>
        </div>
        <div className="ambition-section"><div className="ambition-title">KINH NGHI·ªÜM L√ÄM VI·ªÜC</div><div>{fields.experience}</div></div>
        <div className="ambition-section"><div className="ambition-title">H·ªåC V·∫§N</div><div>{fields.education}</div></div>
        <div className="ambition-section"><div className="ambition-title">DANH HI·ªÜU &amp; GI·∫¢I TH∆Ø·ªûNG</div><div>{fields.award}</div></div>
        <div className="ambition-section"><div className="ambition-title">CH·ª®NG CH·ªà</div><div>{fields.certificate}</div></div>
        <div className="ambition-section"><div className="ambition-title">HO·∫†T ƒê·ªòNG</div><div>{fields.activity}</div></div>
      </div>
    </div>
  );

  const Expert = () => (
    <div ref={previewRef} className="cv-preview-expert editcv-preview">
      <div className="expert-header">
        <div>
          <div className="expert-fullname">{fields.fullName || "T√™n"}</div>
          <div className="expert-position">{fields.position || "V·ªã tr√≠ ·ª©ng tuy·ªÉn"}</div>
        </div>
        <div className="expert-contact">
          <div>üìû {fields.phone}</div>
          <div>‚úâÔ∏è {fields.email}</div>
          <div>üìç {fields.address}</div>
        </div>
      </div>
      <div className="expert-section">
        <div className="expert-section-title">M·ª§C TI√äU NGH·ªÄ NGHI·ªÜP</div>
        <div className="expert-section-desc">{fields.objective}</div>
      </div>
      <div className="expert-section">
        <div className="expert-section-title">KINH NGHI·ªÜM L√ÄM VI·ªÜC</div>
        <div className="expert-section-desc">{fields.experience}</div>
      </div>
      <div className="expert-row">
        <div className="expert-col">
          <div className="expert-section-title">H·ªåC V·∫§N</div>
          <div className="expert-section-desc">{fields.education}</div>
        </div>
        <div className="expert-col">
          <div className="expert-section-title">C√ÅC K·ª∏ NƒÇNG</div>
          <div className="expert-section-desc">{fields.skills}</div>
        </div>
      </div>
      <div className="expert-row">
        <div className="expert-col">
          <div className="expert-section-title">DANH HI·ªÜU &amp; GI·∫¢I TH∆Ø·ªûNG</div>
          <div className="expert-section-desc">{fields.award}</div>
        </div>
        <div className="expert-col">
          <div className="expert-section-title">CH·ª®NG CH·ªà</div>
          <div className="expert-section-desc">{fields.certificate}</div>
        </div>
        <div className="expert-col">
          <div className="expert-section-title">NG∆Ø·ªúI GI·ªöI THI·ªÜU</div>
          <div className="expert-section-desc">{fields.reference}</div>
        </div>
      </div>
      <div className="expert-row">
        <div className="expert-col">
          <div className="expert-section-title">HO·∫†T ƒê·ªòNG</div>
          <div className="expert-section-desc">{fields.activity}</div>
        </div>
        <div className="expert-col">
          <div className="expert-section-title">S·ªû TH√çCH</div>
          <div className="expert-section-desc">{fields.hobbies}</div>
        </div>
        <div className="expert-col">
          <div className="expert-section-title">TH√îNG TIN TH√äM</div>
          <div className="expert-section-desc">{fields.additional}</div>
        </div>
      </div>
    </div>
  );

  return (
    <div className="editcv-container">
      <div className="editcv-form-side">
        <h2>Ch·ªânh s·ª≠a CV</h2>
        <form className="editcv-form">{renderForm()}</form>
        <button
          type="button"
          className="editcv-download-btn"
          onClick={handleDownloadPDF}
        >
          T·∫£i v·ªÅ PDF
        </button>
      </div>
      <div className="editcv-preview-side">
        {id === "pro" && <Pro />}
        {id === "ambition" && <Ambition />}
        {id === "expert" && <Expert />}
      </div>
    </div>
  );
};

export default EditCVPage;
